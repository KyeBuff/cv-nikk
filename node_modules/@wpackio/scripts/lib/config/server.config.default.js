"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serverConfigDefault = void 0;
const serverConfigDefault = {
  // Your LAN IP or host where you would want the live server
  // Override this if you know your correct external IP (LAN)
  // Otherwise, the system will always use localhost and will not
  // work for external IP.
  // This will also create some issues with file watching because for
  // some reason, service-worker doesn't work on localhost?
  // https://github.com/BrowserSync/browser-sync/issues/1295
  // So it is recommended to change this to your LAN IP.
  // If you intend to access it from your LAN (probably do?)
  // If you keep null, then wpackio-scripts will try to determine your LAN IP
  // on it's own, which might not always be satisfying.
  host: undefined,
  // Your WordPress development server address
  // This is super important
  proxy: 'http://localhost',
  // PORT on your localhost where you would want live server to hook
  port: 3000,
  // UI passed directly to browsersync
  ui: {
    port: 3001
  },
  // Whether to show the "BrowserSync Connected"
  notify: false,
  // Open the local URL, set to false to disable
  open: true,
  // BrowserSync ghostMode, set to false to completely disable
  ghostMode: {
    clicks: true,
    scroll: true,
    forms: true
  },
  // Override system calculated public path of the `dist` directory
  // This must have forward slash, otherwise it will not work.
  distPublicPath: undefined
};
exports.serverConfigDefault = serverConfigDefault;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWcvc2VydmVyLmNvbmZpZy5kZWZhdWx0LnRzIl0sIm5hbWVzIjpbInNlcnZlckNvbmZpZ0RlZmF1bHQiLCJob3N0IiwidW5kZWZpbmVkIiwicHJveHkiLCJwb3J0IiwidWkiLCJub3RpZnkiLCJvcGVuIiwiZ2hvc3RNb2RlIiwiY2xpY2tzIiwic2Nyb2xsIiwiZm9ybXMiLCJkaXN0UHVibGljUGF0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBZU8sTUFBTUEsbUJBQWlDLEdBQUc7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQyxFQUFBQSxJQUFJLEVBQUVDLFNBWjBDO0FBYWhEO0FBQ0E7QUFDQUMsRUFBQUEsS0FBSyxFQUFFLGtCQWZ5QztBQWdCaEQ7QUFDQUMsRUFBQUEsSUFBSSxFQUFFLElBakIwQztBQWtCaEQ7QUFDQUMsRUFBQUEsRUFBRSxFQUFFO0FBQ0hELElBQUFBLElBQUksRUFBRTtBQURILEdBbkI0QztBQXNCaEQ7QUFDQUUsRUFBQUEsTUFBTSxFQUFFLEtBdkJ3QztBQXdCaEQ7QUFDQUMsRUFBQUEsSUFBSSxFQUFFLElBekIwQztBQTBCaEQ7QUFDQUMsRUFBQUEsU0FBUyxFQUFFO0FBQ1ZDLElBQUFBLE1BQU0sRUFBRSxJQURFO0FBRVZDLElBQUFBLE1BQU0sRUFBRSxJQUZFO0FBR1ZDLElBQUFBLEtBQUssRUFBRTtBQUhHLEdBM0JxQztBQWdDaEQ7QUFDQTtBQUNBQyxFQUFBQSxjQUFjLEVBQUVWO0FBbENnQyxDQUExQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBicm93c2VyU3luYyBmcm9tICdicm93c2VyLXN5bmMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlcnZlckNvbmZpZyB7XG5cdGhvc3Q/OiBzdHJpbmc7XG5cdHByb3h5OiBzdHJpbmc7XG5cdHBvcnQ6IG51bWJlcjtcblx0dWk6IGJyb3dzZXJTeW5jLlVJT3B0aW9ucztcblx0bm90aWZ5OiBib29sZWFuO1xuXHRvcGVuOiBib29sZWFuO1xuXHRnaG9zdE1vZGU6IGJyb3dzZXJTeW5jLk9wdGlvbnNbJ2dob3N0TW9kZSddO1xuXHQvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG5cdGJzT3ZlcnJpZGU/OiB7IFt4OiBzdHJpbmddOiBhbnkgfTtcblx0ZGlzdFB1YmxpY1BhdGg/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBzZXJ2ZXJDb25maWdEZWZhdWx0OiBTZXJ2ZXJDb25maWcgPSB7XG5cdC8vIFlvdXIgTEFOIElQIG9yIGhvc3Qgd2hlcmUgeW91IHdvdWxkIHdhbnQgdGhlIGxpdmUgc2VydmVyXG5cdC8vIE92ZXJyaWRlIHRoaXMgaWYgeW91IGtub3cgeW91ciBjb3JyZWN0IGV4dGVybmFsIElQIChMQU4pXG5cdC8vIE90aGVyd2lzZSwgdGhlIHN5c3RlbSB3aWxsIGFsd2F5cyB1c2UgbG9jYWxob3N0IGFuZCB3aWxsIG5vdFxuXHQvLyB3b3JrIGZvciBleHRlcm5hbCBJUC5cblx0Ly8gVGhpcyB3aWxsIGFsc28gY3JlYXRlIHNvbWUgaXNzdWVzIHdpdGggZmlsZSB3YXRjaGluZyBiZWNhdXNlIGZvclxuXHQvLyBzb21lIHJlYXNvbiwgc2VydmljZS13b3JrZXIgZG9lc24ndCB3b3JrIG9uIGxvY2FsaG9zdD9cblx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL0Jyb3dzZXJTeW5jL2Jyb3dzZXItc3luYy9pc3N1ZXMvMTI5NVxuXHQvLyBTbyBpdCBpcyByZWNvbW1lbmRlZCB0byBjaGFuZ2UgdGhpcyB0byB5b3VyIExBTiBJUC5cblx0Ly8gSWYgeW91IGludGVuZCB0byBhY2Nlc3MgaXQgZnJvbSB5b3VyIExBTiAocHJvYmFibHkgZG8/KVxuXHQvLyBJZiB5b3Uga2VlcCBudWxsLCB0aGVuIHdwYWNraW8tc2NyaXB0cyB3aWxsIHRyeSB0byBkZXRlcm1pbmUgeW91ciBMQU4gSVBcblx0Ly8gb24gaXQncyBvd24sIHdoaWNoIG1pZ2h0IG5vdCBhbHdheXMgYmUgc2F0aXNmeWluZy5cblx0aG9zdDogdW5kZWZpbmVkLFxuXHQvLyBZb3VyIFdvcmRQcmVzcyBkZXZlbG9wbWVudCBzZXJ2ZXIgYWRkcmVzc1xuXHQvLyBUaGlzIGlzIHN1cGVyIGltcG9ydGFudFxuXHRwcm94eTogJ2h0dHA6Ly9sb2NhbGhvc3QnLFxuXHQvLyBQT1JUIG9uIHlvdXIgbG9jYWxob3N0IHdoZXJlIHlvdSB3b3VsZCB3YW50IGxpdmUgc2VydmVyIHRvIGhvb2tcblx0cG9ydDogMzAwMCxcblx0Ly8gVUkgcGFzc2VkIGRpcmVjdGx5IHRvIGJyb3dzZXJzeW5jXG5cdHVpOiB7XG5cdFx0cG9ydDogMzAwMSxcblx0fSxcblx0Ly8gV2hldGhlciB0byBzaG93IHRoZSBcIkJyb3dzZXJTeW5jIENvbm5lY3RlZFwiXG5cdG5vdGlmeTogZmFsc2UsXG5cdC8vIE9wZW4gdGhlIGxvY2FsIFVSTCwgc2V0IHRvIGZhbHNlIHRvIGRpc2FibGVcblx0b3BlbjogdHJ1ZSxcblx0Ly8gQnJvd3NlclN5bmMgZ2hvc3RNb2RlLCBzZXQgdG8gZmFsc2UgdG8gY29tcGxldGVseSBkaXNhYmxlXG5cdGdob3N0TW9kZToge1xuXHRcdGNsaWNrczogdHJ1ZSxcblx0XHRzY3JvbGw6IHRydWUsXG5cdFx0Zm9ybXM6IHRydWUsXG5cdH0sXG5cdC8vIE92ZXJyaWRlIHN5c3RlbSBjYWxjdWxhdGVkIHB1YmxpYyBwYXRoIG9mIHRoZSBgZGlzdGAgZGlyZWN0b3J5XG5cdC8vIFRoaXMgbXVzdCBoYXZlIGZvcndhcmQgc2xhc2gsIG90aGVyd2lzZSBpdCB3aWxsIG5vdCB3b3JrLlxuXHRkaXN0UHVibGljUGF0aDogdW5kZWZpbmVkLFxufTtcbiJdfQ==
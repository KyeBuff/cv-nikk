import archiver from 'archiver';
import cpy from 'cpy';
import { ProjectConfig } from '../config/project.config.default';
export interface Callbacks {
    onMkDirPackage(path: string): void;
    onClean(paths: string[]): void;
    onMkDirSlug(path: string): void;
    onCopy(): void;
    onBeforeCopy(): void;
    onCopyProgress(progress: cpy.ProgressData): void;
    onBeforeZip(): void;
    onZipProgress(progress: archiver.ProgressData): void;
    onZip(result: ArchiveResolve): void;
}
export interface ArchiveResolve {
    size: number;
    path: string;
    relPath: string;
}
export declare class Pack {
    private projectConfig;
    private packageSlugPath;
    private packageDirPath;
    private packageZipPath;
    private cwd;
    private callbacks;
    constructor(projectConfig: ProjectConfig, callbacks: Callbacks, cwd: string);
    pack(): Promise<void>;
    private mkDirPackage;
    private clean;
    private mkDirPackageSlug;
    private copy;
    private zip;
}

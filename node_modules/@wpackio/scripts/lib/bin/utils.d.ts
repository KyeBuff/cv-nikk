import archiver from 'archiver';
import { ProgressData } from 'cpy';
import webpack from 'webpack';
import { WpackioError } from '../errors/WpackioError';
import { ArchiveResolve } from '../scripts/Pack';
export declare const bulletSymbol: string;
export declare const donationLink: string;
export declare const wpackLogo: string;
export declare const wpackLogoSmall: string;
export declare const donationSentence: string;
export declare function addTimeStampToLog(log: string): string;
export declare const watchSymbol: string;
export declare const watchEllipsis: string;
export declare function printWatchingMessage(): void;
export declare function printCompilingMessage(): void;
export declare function printCompileTimeMessage(stat: any, lastStat: any | null): void;
export declare const webpackStatToJsonOptions: webpack.Stats.ToJsonOptions;
export declare function printCompileTimeMessages(stats: webpack.Stats, lastStatsJson: any | null): void;
export declare function printSuccessfullyCompiledMessage(): void;
export declare function printCompiledWithWarnMessage(): void;
export declare function printFailedCompileMEssage(): void;
export declare function printGeneralInfoMessage(msg: string, symbol?: string): void;
export declare function printErrorHeading(msg?: string): void;
export declare function printWarningHeading(msg?: string): void;
export declare function printSuccessHeading(msg?: string): void;
export declare const wpackLink: string;
export declare const wpackIntro: string;
export declare function isYarn(): boolean;
export declare const contextHelp: string;
export declare const entriesHelp: string;
export declare function printIntro(): void;
/**
 * Resolve `cwd`, a.k.a, current working directory or context from user input.
 * It takes into account the `--context [path]` option from CLI and uses process
 * cwd, if not provided.
 *
 * @param options Options as received from CLI
 */
export declare function resolveCWD(options: {
    context?: string | undefined;
} | undefined): string;
export declare function serverInfo(url: string, uiUrl: string | boolean): void;
export declare function serveEntryInfo(): void;
export declare function endServeInfo(): void;
export declare function endBuildInfo(): void;
export declare function endBootstrapInfo(): void;
export declare function prettyPrintError(e: Error | WpackioError, errorMsg: string): void;
export declare function getProgressBar(done: number): string;
export declare function getFileCopyProgress(progress?: ProgressData): string;
export declare function getZipProgress(data?: archiver.ProgressData): string;
export declare function endPackInfo(results: ArchiveResolve): void;
